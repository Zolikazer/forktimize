export const translations = {
    en: {
        hero: {
            title: ({vendor}) => `${vendor} Meal Planner`,
            subtitle: () => "Plan, Eat, Be Fit!",
        },
        requestForm: {
            setYourGoals: () => "Set Your Nutritional Goals",
            setYourGoalSub: () => "Give us the requirements, we give you the plan!",
            kitchen: () => "Kitchen",
            generateMeal: () => "Generate Meal Plan",
            optional: () => "Optional",
            selectDate: () => "Select Date",
            dislikedFoods: () => "Disliked Foods",
            canFoodRepeat: () => "Can a Food Repeat",
            typeFoodEnter: () => "Type a food and press Enter",
        },
        macro: {
            calories: () => "Calories",
            caloriesSmall: () => "calories",
            protein: () => "Protein",
            carb: () => "Carb",
            carbohydrate: () => "Carbohydrate",
            fat: () => "Fat",
        },
        mealPlan: {
            yourMealPlan: () => "Your Meal Plan",
            orderTheseFoods: () => `Order these from`,
            items: () => "items",
            dontLike: () => "Don't Like",
        },
        feedback: {
            ready: () => "Your meal plan is ready.",
            inProgress: () => "Generating your meal plan... Please wait!",
            failed: () => `Sorry, we could not find a meal plan that meets your needs. üòî <strong>Adjust your input and try again!</strong>`,
            notStarted: () => `No meal plan generated yet. Click <strong>"Generate Meal Plan"</strong> to get started!`,
        },
        instructions: {
            needHelp: () => "Need help?",
            addGoals: () => "Add your <strong>nutritional goals</strong> (calories, protein, carbs, fats).",
            enterMinMax: () => "You only need to enter either the <strong>minimum or maximum</strong> values.",
            selectDay: () => "<strong>Select a day</strong> for which you want to order.",
            appGenerate: () => "The app will generate a <strong>meal plan</strong> that fit your requirements.",
            addDislikedFood: () => 'If you have foods you dislike, <strong>add them to the "Foods You dislike" field</strong> to filter them out.',
            minimizePrice: () => "The <strong>generator prioritizes minimizing price</strong> while still fitting your nutritional constraints.",
            lessConstraintBetter: () => "The <strong>more constraints you add, the harder it is</strong> to find a cheap meal plan"
        },
        summary: {
            title: () => "Your Meal Plan Summary",
            macroRatio: () => "Macronutrient Ratio",
        },
        foodLog: {
            title: () => "Macro Equivalents",
            subtitle: () => "Trackable Format",
            mfpReady: () => "Food Logging Ready",
            chickenBreast: () => "Chicken Breast",
            sugar: () => "Sugar",
            oliveOil: () => "Olive Oil",
            explanation: () => "Your actual meal plan has many foods, but this format lets you log it quickly in your favourite fitness app using 3 basic ingredients that represent your macros.",
        },
        footer: {
            contact: () => "Contact me at:",
        },
        landingPage: {
            navbar: {
                slogen: () => "Your macros. Their food. We do the math.",
                howItWorks: () => "How It Works",
                about: () => "About",
            },
            hero: {
                title: () => "Plan your diet with meals from CityFood and InterFood",
                subtitle: () => "If you want to hit your macros but don‚Äôt want to cook, " +
                    "Forktimize creates a daily meal plan using foods from CityFood or InterFood ‚Äî based on your nutrition goals.",
                orderIfYouLikeIt: () => "If you like the plan, you can order it directly from their website.",
                forkPlan: () => "Fork me a meal plan",
                disclaimer: () => "<strong>Disclaimer:</strong> Forktimize is an independent tool and is not affiliated " +
                    "with endorsed by, or officially connected to CityFood or InterFood. " +
                    "All product names, trademarks, and registered trademarks are property of their respective owners.",
            }
        }

    },
    hu: {
        hero: {
            title: ({vendor}) => `${vendor} √âtrend Tervez≈ë`,
            subtitle: () => "Tervezz, Zab√°lj, Be Fit!",
        },
        requestForm: {
            setYourGoals: () => "√Åll√≠tsd be a t√°panyag c√©ljaidat",
            setYourGoalSub: () => "Add meg a c√©ljaidat, mi pedig elk√©sz√≠tj√ºk a napi √©trendedet!",
            kitchen: () => "Konyha",
            generateMeal: () => "√âtrend gener√°l√°sa",
            optional: () => "Opcion√°lis",
            selectDate: () => "V√°lassz d√°tumot",
            dislikedFoods: () => "Nem kedvelt √©telek",
            canFoodRepeat: () => "Ism√©tl≈ëdhet √©tel",
            typeFoodEnter: () => "√çrj be egy √©telt √©s nyomj Enter-t",
        },
        macro: {
            calories: () => "Kal√≥ria",
            caloriesSmall: () => "kal√≥ria",
            protein: () => "Feh√©rje",
            carb: () => "Sz√©nhidr√°t",
            carbohydrate: () => "Sz√©nhidr√°t",
            fat: () => "Zs√≠r",
        },
        mealPlan: {
            yourMealPlan: () => "A te √©trended",
            orderTheseFoods: () => `Rendeld meg ezeket innen:`,
            items: () => "√©tel",
            dontLike: () => "Nem szeretem",
        },
        feedback: {
            ready: () => "Az √©trended elk√©sz√ºlt.",
            inProgress: () => "√âtrend gener√°l√°sa folyamatban... K√©rlek, v√°rj!",
            failed: () =>
                `Sajn√°ljuk, nem tal√°ltunk olyan √©trendet, ami megfelelne az ig√©nyeidnek. üòî <strong>Pr√≥b√°ld √∫jra m√°s be√°ll√≠t√°sokkal!</strong>`,
            notStarted: () =>
                `M√©g nincs √©trend gener√°lva. Kattints a <strong>‚Äû√âtrend gener√°l√°sa‚Äù</strong> gombra a kezd√©shez!`,
        },
        instructions: {
            needHelp: () => "Kell seg√≠ts√©g?",
            addGoals: () => `Add meg a <strong>t√°pl√°lkoz√°si c√©ljaidat</strong> (kal√≥ria, feh√©rje, sz√©nhidr√°t, zs√≠r).`,
            enterMinMax: () => `El√©g csak a <strong>minimum vagy maximum</strong> √©rt√©ket megadni.`,
            selectDay: () => `<strong>V√°laszd ki a napot</strong>, amelyre rendelni szeretn√©l.`,
            appGenerate: () => `Az alkalmaz√°s egy <strong>√©trendet gener√°l</strong>, ami megfelel az ig√©nyeidnek.`,
            addDislikedFood: () => `Ha van olyan √©tel, amit nem szeretsz, <strong>add hozz√° a ‚ÄûNem szeretem‚Äù mez≈ëh√∂z</strong>, hogy kiz√°rjuk ≈ëket.`,
            minimizePrice: () => `A <strong>gener√°tor el≈ënyben r√©szes√≠ti az olcs√≥bb kombin√°ci√≥kat</strong>, mik√∂zben figyelembe veszi a megadott c√©lokat.`,
            lessConstraintBetter: () => `Min√©l <strong>t√∂bb megk√∂t√©st adsz meg, ann√°l nehezebb</strong> egy olcs√≥ √©trendet tal√°lni.`
        },
        summary: {
            title: () => "Az √©trended √∂sszefoglal√°sa",
            macroRatio: () => "Makrot√°panyag ar√°ny",
        },
        foodLog: {
            title: () => "Makr√≥ Ekvivalens",
            subtitle: () => "Napl√≥zhat√≥ form√°tum",
            mfpReady: () => "√âtelnapl√≥ kompatibilis",
            chickenBreast: () => "Csirkemell",
            sugar: () => "Cukor",
            oliveOil: () => "Ol√≠vaolaj",
            explanation: () => "Az √©trended sok k√ºl√∂nb√∂z≈ë √©telb≈ël √°ll, de ez a form√°tum lehet≈ëv√© teszi, hogy gyorsan napl√≥zd kedvenc fitness alkalmaz√°sodba 3 alap √∂sszetev≈ë seg√≠ts√©g√©vel, amelyek a makr√≥idat k√©pviselik.",
        },
        footer: {
            contact: () => "Kapcsolatfelv√©tel:",
        },
        landingPage: {
            navbar: {
                slogen: () => "A te makr√≥d. Az ≈ë kaj√°juk. Mi sz√°molunk.",
                howItWorks: () => "Hogyan m≈±k√∂dik?",
                about: () => "R√≥lunk",
            },
            hero: {
                title: () => "√âtrend tervez√©s CityFood √©s InterFood √©teleib≈ël",
                subtitle: () => "Ha szeretn√©d el√©rni a makr√≥ c√©ljaidat, de nincs kedved f≈ëzni, " +
                    "a Forktimize napi √©trendet k√©sz√≠t neked a <strong>CityFood vagy InterFood</strong> k√≠n√°lat√°b√≥l ‚Äì a t√°pl√°lkoz√°si c√©ljaid alapj√°n.",
                orderIfYouLikeIt: () => "Ha tetszik a terv, az √©telt k√∂zvetlen√ºl megrendelheted a szolg√°ltat√≥ oldal√°n.",
                forkPlan: () => "Tervezd meg az √©trendem!",
                disclaimer: () => "<strong>Figyelem:</strong> A Forktimize egy f√ºggetlen eszk√∂z, " +
                    "nincs kapcsolatban, sem hivatalos egy√ºttm≈±k√∂d√©sben a CityFood vagy InterFood c√©gekkel. " +
                    "Minden term√©kn√©v, v√©djegy √©s bejegyzett m√°rkan√©v a tulajdonos√°t illeti.",
            }
        }

    },
};
