name: Deploy Forktimize 🚀

on:
  push:
    branches: [master]

env:
  LOG_DIR: ${{ github.workspace }}/logs

jobs:
  test:
      name: 🧪 Run tests
      runs-on: ubuntu-latest

      steps:
        - name: 🧲 Checkout code
          uses: actions/checkout@v3

        - name: 🐍 Set up Python
          uses: actions/setup-python@v4
          with:
            python-version: "3.12"

        - name: 🧪 Install backend dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r backend/requirements.txt

        - name: ✅ Run backend tests
          run: pytest

        - name: 📦 Install frontend deps
          working-directory: frontend
          run: npm ci

        - name: 🧪 Run frontend tests
          working-directory: frontend
          run: npm test

        - name: 📦 Install extension deps
          working-directory: browser-extension
          run: npm ci

        - name: 🧪 Run extension tests
          working-directory: browser-extension
          run: npm run test:run

        - name: 🚀 Start FastAPI backend
          working-directory: backend
          env:
            FETCH_IMAGES: false
            WEEKS_TO_FETCH: 3
            INCLUDE_HEAVY_JOBS: false
            MODE: testing
          run: |
            uvicorn main:app > $LOG_DIR/all.log 2>&1 &
            sleep 5

        - name: 🚀 Run e2e tests
          working-directory: frontend
          env:
            VITE_API_URL: http://localhost:8000/api
            VITE_DEFAULT_LOCALE: en
          run: |
            npx playwright install --with-deps
            npm run test:e2e

        - name: Upload Playwright test results (only on failure)
          if: failure()
          uses: actions/upload-artifact@v4
          with:
            name: playwright-artifacts
            path: frontend/test-results/

        - name: Upload backend logs
          if: failure()
          uses: actions/upload-artifact@v4
          with:
            name: backend-logs
            path: ${{ env.LOG_DIR }}

  build-extension:
    name: 🔨 Build browser extension
    runs-on: ubuntu-latest

    steps:
      - name: 🧲 Checkout code
        uses: actions/checkout@v3

      - name: 📦 Install extension deps
        working-directory: browser-extension
        run: npm ci

      - name: 🔨 Build extension
        working-directory: browser-extension
        run: ./build.sh

      - name: 📦 Package extension
        working-directory: browser-extension
        run: ./package.sh

      - name: 📦 Upload extension packages
        uses: actions/upload-artifact@v4
        with:
          name: forktimize-extension-packages
          path: browser-extension/release/*.zip
          retention-days: 30

  deploy-backend:
    runs-on: ubuntu-latest
    needs: [test, build-extension]
    steps:
      - name: 🚪 SSH & Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY  }}
          script: |
            cd /opt/forktimize
            git config --global --add safe.directory /opt/forktimize
            ./update_deployment.sh

  deploy-frontend:
    runs-on: ubuntu-latest
    needs:
      - test
      - build-extension
      - deploy-backend
    steps:
      - name: 📥 Checkout repo
        uses: actions/checkout@v3

      - name: 📦 Install Vercel CLI
        run: npm install -g vercel

      - name: 🌍 Deploy frontend to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          vercel deploy --prod --yes --token=$VERCEL_TOKEN